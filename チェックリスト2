Q なぜモデルでSoftDeletesトレイトを読み込むだけで処理が物理削除から論理削除になるのか
  SoftDeletesトレイトをモデルに読み込むことで、Eloquentが自動的に論理削除を行うようになります。
  SoftDeletesトレイトには、論理削除を行うためのメソッドやフックが実装されており、これらがモデルの動作を変更します。

Q なぜJSON形式でレスポンスを返しているか
  JavaScriptと連携する他の言語とデータのやりとりをするために考え出された、軽量なデータ交換フォーマット

Q なぜJavaScriptでCSRFトークンを取得したか
  非同期通信の際もCSRF対策が必要だから

Q traitとclassの違いは何か
  どちらも機能を継承するためのものだがトレイトはインスタンス化できない
  またトレイトの方が優先順位が高い

Q vendorディレクトリは通常、外部の依存関係やライブラリが含まれています。
  このディレクトリ内のファイルは、アプリケーションのコアコードではなく、外部のパッケージやフレームワークのコードです。

Q 同期通信（Synchronous Communication）:
  リクエストを送信したら、レスポンスを受け取るまで次の処理を待機します。
  つまり、1つのリクエストに対して1つのレスポンスが返されるまで、他の処理はブロックされます。
  同期通信は、処理の完了まで待機するため、処理が遅延する可能性があります。
  典型的なウェブページのロードは同期通信の一例です。

  非同期通信（Asynchronous Communication）:
  リクエストを送信した後、レスポンスを待たずに次の処理を継続します。
  つまり、リクエストを送信した後でも処理を進め、レスポンスを受け取るまで他の処理を行います。
  非同期通信は、処理の進行をブロックせずにリソースを効率的に利用できます。
  JavaScriptでのAjaxリクエストや非同期JavaScriptの処理などが非同期通信の一例です。

Q　非同期通信のメリット
  ページのレスポンス時間を向上させることができる。
  ユーザーエクスペリエンスを向上させ、アプリケーションのレスポンシブ性を高めることができる。
  サーバー負荷を軽減し、スケーラビリティを向上させることができる。

Q RESTfulなURL設計とは
  REST（Representational State Transfer）の原則に基づいて設計されたウェブアプリケーションのURLの構造です
  名詞を利用したり→userとかbookとか
  HTTPメソッドを使用する→postとかget
  CRUD操作の使用→updateとかcreateとか
  リソースの階層構造　/users/{userId}/todo　userに関わりがあるとわかるように
  パスパラメータ　/users/{userId}　idの部分

非同期通信の通信結果をどのようにブラウザで確認したか
コンソール